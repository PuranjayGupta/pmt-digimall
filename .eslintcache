[{"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\index.js":"1","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\App.js":"2","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\history.js":"3","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\layouts\\index.js":"4","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\layouts\\Header\\index.js":"5","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\layouts\\Router\\index.js":"6","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\api\\index.js":"7","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\reducer\\index.js":"8","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\templates\\Home\\index.js":"9","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\templates\\ProductDetails\\index.js":"10","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\atoms\\BackButton\\index.js":"11","C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\templates\\Cart\\index.js":"12"},{"size":161,"mtime":1607444900575,"results":"13","hashOfConfig":"14"},{"size":734,"mtime":1607444878788,"results":"15","hashOfConfig":"14"},{"size":89,"mtime":1606828489366,"results":"16","hashOfConfig":"14"},{"size":658,"mtime":1607444817989,"results":"17","hashOfConfig":"14"},{"size":900,"mtime":1607444740415,"results":"18","hashOfConfig":"14"},{"size":1129,"mtime":1607444787080,"results":"19","hashOfConfig":"14"},{"size":1352,"mtime":1607444766473,"results":"20","hashOfConfig":"14"},{"size":492,"mtime":1607330941404,"results":"21","hashOfConfig":"14"},{"size":3837,"mtime":1607444972517,"results":"22","hashOfConfig":"14"},{"size":3455,"mtime":1607444976337,"results":"23","hashOfConfig":"14"},{"size":416,"mtime":1607280363476,"results":"24","hashOfConfig":"14"},{"size":5545,"mtime":1607429502418,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q7oh90",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\index.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\App.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\history.js",[],["52","53"],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\layouts\\index.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\layouts\\Header\\index.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\layouts\\Router\\index.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\api\\index.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\reducer\\index.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\templates\\Home\\index.js",["54","55"],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\templates\\ProductDetails\\index.js",["56"],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\atoms\\BackButton\\index.js",[],"C:\\Users\\gupta\\Desktop\\PMT assignment\\digimall\\src\\components\\templates\\Cart\\index.js",["57","58","59","60"],"import React, { useContext, useState } from \"react\";\r\nimport DigiMallContext from \"../../App\";\r\nimport { List, InputNumber, Button, Row, Col } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { DeleteTwoTone } from \"@ant-design/icons\";\r\nimport BackButton from \"../../atoms/BackButton\";\r\n\r\nconst Cart = (props) => {\r\n  const { globalData, dispatch } = useContext(DigiMallContext);\r\n  const [localStorageState, setLocalStorageState] = useState(\r\n    JSON.parse(localStorage.getItem(\"globalData\"))\r\n  );\r\n\r\n  let productKey,\r\n    productPriceObj = {};\r\n\r\n  const cartList = () => {\r\n    let listKeys = Object.keys(localStorageState.cartData);\r\n    return listKeys.map((key) => {\r\n      return localStorageState.apiData[key];\r\n    });\r\n  };\r\n\r\n  const [listData, setListData] = React.useState(cartList());\r\n\r\n  const calProductPrice = () => {\r\n    listData.map((item) => {\r\n      productKey = Object.keys(localStorageState.apiData).find(\r\n        (key) => localStorageState.apiData[key] === item\r\n      );\r\n\r\n      productPriceObj[productKey] =\r\n        item.price * localStorageState.cartData[productKey];\r\n    });\r\n    return productPriceObj;\r\n  };\r\n\r\n  const [productPrice, setProductPrice] = useState(calProductPrice());\r\n\r\n  const calSum = () => {\r\n    let sum = 0;\r\n    for (const [key, value] of Object.entries(productPrice)) {\r\n      sum = sum + value / localStorageState.apiData[key].price;\r\n    }\r\n    return sum;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    props.changeCount(\"set\", calSum());\r\n  }, [globalData]);\r\n\r\n  const onChange = (value, productKey) => {\r\n    let obj = {};\r\n    obj[productKey] = value;\r\n    dispatch({\r\n      type: \"change\",\r\n      product: obj,\r\n    });\r\n\r\n    localStorage.setItem(\"globalData\", JSON.stringify(globalData));\r\n\r\n    productPriceObj = JSON.parse(JSON.stringify(productPrice));\r\n\r\n    if (value === 0) {\r\n      let arr = listData;\r\n      const index = arr.indexOf(localStorageState.apiData[productKey]);\r\n      if (index > -1) {\r\n        arr.splice(index, 1);\r\n      }\r\n      setListData(arr);\r\n      delete productPriceObj[productKey];\r\n      setProductPrice(productPriceObj);\r\n      return;\r\n    }\r\n\r\n    productPriceObj[productKey] =\r\n      localStorageState.apiData[productKey].price * value;\r\n    setProductPrice(productPriceObj);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    props.changeCount(\"set\", calSum());\r\n  }, [productPrice]);\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[0, 16]}>\r\n        <Col offset={1}>\r\n          <BackButton />\r\n        </Col>\r\n        <Col offset={10}>\r\n          <h1>\r\n            <b>Cart</b>\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      {listData.length > 0 ? null : (\r\n        <Row>\r\n          <Col offset={11}>\r\n            <h1> Your cart is empty</h1>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Col offset={1} span={22}>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={listData}\r\n          renderItem={(item) => {\r\n            let productID = Object.keys(localStorageState.apiData).find(\r\n              (key) => localStorageState.apiData[key] === item\r\n            );\r\n\r\n            return (\r\n              <List.Item\r\n                actions={[\r\n                  <Row align=\"left\">\r\n                    <Col>\r\n                      <Button\r\n                        icon={<DeleteTwoTone />}\r\n                        onClick={() => onChange(0, productID)}\r\n                      />\r\n                    </Col>\r\n                  </Row>,\r\n                  <Row align=\"left\">\r\n                    <Col>\r\n                      <InputNumber\r\n                        min={1}\r\n                        max={10}\r\n                        defaultValue={localStorageState.cartData[productID]}\r\n                        onChange={(value) => onChange(value, productID)}\r\n                      />\r\n                    </Col>\r\n                  </Row>,\r\n                  <Row align=\"left\">\r\n                    <Col>\r\n                      <b>{\"₹ \" + productPrice[productID]}</b>{\" \"}\r\n                    </Col>\r\n                  </Row>,\r\n                ]}\r\n              >\r\n                <List.Item.Meta\r\n                  title={\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: \"/product-details\",\r\n                        state: {\r\n                          product: Object.keys(localStorageState.apiData).find(\r\n                            (key) => localStorageState.apiData[key] === item\r\n                          ),\r\n                        },\r\n                      }}\r\n                    >\r\n                      {item.name}\r\n                    </NavLink>\r\n                  }\r\n                  description={\r\n                    \"Company: \" +\r\n                    item.company +\r\n                    \", \" +\r\n                    \"Category: \" +\r\n                    item.category +\r\n                    \", \" +\r\n                    \"Price: ₹ \" +\r\n                    item.price\r\n                  }\r\n                />\r\n              </List.Item>\r\n            );\r\n          }}\r\n        />\r\n      </Col>\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col offset={16}>\r\n          <b>Total Number of Products: </b>\r\n        </Col>\r\n        <Col offset={1}>{calSum()}</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset={16}>\r\n          <b>Total Price: </b>{\" \"}\r\n        </Col>\r\n        <Col offset={3}>\r\n          {\"₹ \" + Object.values(productPrice).reduce((a, b) => a + b, 0)}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":44,"column":6,"nodeType":"67","endLine":44,"endColumn":16,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"66","line":86,"column":6,"nodeType":"67","endLine":86,"endColumn":16,"suggestions":"69"},{"ruleId":"65","severity":1,"message":"70","line":24,"column":6,"nodeType":"67","endLine":24,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":10,"column":29,"nodeType":"74","messageId":"75","endLine":10,"endColumn":49},{"ruleId":"76","severity":1,"message":"77","line":27,"column":25,"nodeType":"78","messageId":"79","endLine":27,"endColumn":27},{"ruleId":"65","severity":1,"message":"80","line":50,"column":6,"nodeType":"67","endLine":50,"endColumn":18,"suggestions":"81"},{"ruleId":"65","severity":1,"message":"80","line":83,"column":6,"nodeType":"67","endLine":83,"endColumn":20,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["85"],["86"],"React Hook React.useEffect has missing dependencies: 'localStorageState.cartData' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["87"],"no-unused-vars","'setLocalStorageState' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has missing dependencies: 'calSum' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["88"],["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [dispatch, props]",{"range":"100","text":"101"},"Update the dependencies array to be: [cartData, props]",{"range":"102","text":"103"},"Update the dependencies array to be: [localStorageState.cartData, props]",{"range":"104","text":"105"},"Update the dependencies array to be: [calSum, globalData, props]",{"range":"106","text":"107"},"Update the dependencies array to be: [calSum, productPrice, props]",{"range":"108","text":"109"},[1381,1391],"[dispatch, props]",[2386,2396],"[cartData, props]",[854,856],"[localStorageState.cartData, props]",[1519,1531],"[calSum, globalData, props]",[2377,2391],"[calSum, productPrice, props]"]